sq = lambda x:x*2

l = [10,20,30,40,50,60,70]

new_list = list(map(sq,l))

print("Using map function")
print(new_list)

def filtering(x):
    if x%6 == 0:
        return True
    
    else:
        return False

new_list1 = list(filter(filtering,new_list))

for x in new_list1:
    print(x)

    
----------------------------------------------------------------------------------------------------------------------------------------------
#Display square of number from 1 to 11 using list comprehension
List = [pow(i,2) for i in range(1,11)]

print(List)

#reverse each string in a tuple
rev = [str[::-1] for str in ("geeks","for","geeks")]
print(rev)

#sum of digits which are odd
def digisum(num):
    sum = 0
    while(num!=0):
        rem = num%10
        sum = sum + rem
        num = num//10
    return sum

l = [367, 111, 562, 945, 6726, 873]
res = [digisum(i) for i in l if i%2!=0]
print(res)
-----------------------------------------------------------------------------------------------------------------------------------------------
class Person:
    def __init__(self,name,age):
        self.name = name
        self.age = age
        self.__pvt = "Private Member"
        self._protec = "Protected Member"
    
    def disp(self):
        print("Name: ",self.name)
        print("Age: ",self.age)
        print("Pr: ",self.__pvt)
        print("Protected: ",self._protec)

class Student(Person):
    def about(self,color,marks,status):
        self.color = color
        self.marks = marks
        self.status = status
    
    def disp1(self):
        print("Color: ",self.color)
        print("Marks: ",self.marks)
        print("Status: ", self.status)
        print("Protected: ",self._protec)


std = Student("ABC",40)
std.about("black",90,"student clearance")
std.disp()
std.disp1()
